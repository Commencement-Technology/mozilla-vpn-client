name: Linux Packages
on:
  push:
    branches:
      - main
      - "releases/**"
  pull_request:
    branches:
      - main
      - "releases/**"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  source-bundle:
    name: Source Bundle
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.9"
          cache: "pip"
      - run: pip install -r requirements.txt

      - name: Install source dependencies
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install golang debhelper -y

      - name: Build source bundle
        shell: bash
        env:
          GITREF: ${{github.ref}}
        run: ./scripts/linux/script.sh --source --gitref ${GITREF}

      - name: Upload source bundle
        uses: actions/upload-artifact@v4
        with:
          name: Sources
          path: .tmp

  flatpak:
    name: Flatpak Packages
    needs: source-bundle
    runs-on: ubuntu-latest

    steps:
      - name: Download Source Package
        uses: actions/download-artifact@v4
        with:
          name: Sources

      - name: Install Flatpak Tools
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install flatpak flatpak-builder -y
          flatpak remote-add --user --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo

      - name: Installing Dependencies
        shell: bash
        run: |
          mkdir fp-build-dir
          flatpak-builder --user --install-deps-from=flathub --install-deps-only fp-build-dir org.mozilla.vpn.yml

      - name: Building Flatpak
        shell: bash
        run: flatpak-builder --user fp-build-dir org.mozilla.vpn.yml

      - name: Exporting Flatpak
        shell: bash
        run: |
          mkdir fp-export-dir
          flatpak build-export fp-export-dir fp-build-dir
          flatpak build-bundle fp-export-dir mozillavpn.flatpak org.mozilla.vpn

      - name: Uploading
        uses: actions/upload-artifact@v4
        with:
          name: Flatpak Build
          path: mozillavpn.flatpak

  rpmbuild:
    name: RPM Packages
    needs: source-bundle
    runs-on: ubuntu-latest
    container:
      image: fedora:39

    steps:
      - name: Download Source Package
        uses: actions/download-artifact@v4
        with:
          name: Sources

      - name: Install Build Dependencies
        run: |
          dnf -y install rpmdevtools 'dnf-command(builddep)'
          dnf -y builddep mozillavpn.spec

      - name: Building package
        shell: bash
        run: rpmbuild -D "_topdir $(pwd)" -D "_sourcedir $(pwd)" -ba mozillavpn.spec

      - name: Uploading
        uses: actions/upload-artifact@v4
        with:
          name: RPM Build
          path: |
            RPMS/
            SRPMS/

  flatpak-pydeps:
    name: "Update Flatpak Python Deps"
    runs-on: ubuntu-latest
    #if: ${{ github.actor == 'dependabot[bot]' && github.event_name == 'pull_request' }}
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
      
      - name: Checkout flatpak-pip-generator
        uses: actions/checkout@v4
        with:
          repository: flatpak/flatpak-builder-tools
          path: 3rdparty/flatpak-builder-tools

      - name: Install dependencies
        shell: bash
        run: pip install requirements-parser

      - name: Rebuild flatpak-pydeps.yaml
        shell: bash
        run: |
          # Check to see if the pydeps need updating.
          git fetch origin "${{ github.base_ref }}" --depth=1
          git diff --name-only "origin/${{ github.base_ref }}" > changeset.txt
          if grep -q '^linux/flatpak-pydeps.yaml' changeset.txt; then
            # Skip this check if the pydeps were already updated.
            exit 0
          fi
          if ! grep -q '^requirements.txt' changeset.txt; then
            # Skip this check if the python deps haven't changed.
            exit 0
          fi 

          # Regenerate the pydeps.yml
          FLATPAK_PIP_ARGS="-r requirements.txt --output flatpak-pydeps --yaml --build-only"
          3rdparty/flatpak-builder-tools/pip/flatpak-pip-generator $FLATPAK_PIP_ARGS
          echo "# Generated by: flatpak-pip-generator ${FLATPAK_PIP_ARGS}" > linux/flatpak-pydeps.yaml
          cat flatpak-pydeps.yaml >> linux/flatpak-pydeps.yaml

          echo "Diffing..."
          git diff

          # Add the commit
          git add linux/flatpak-pydeps.yaml
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com" 
          git commit -m "Update linux/flatpak-pydeps.yaml"
          git status
