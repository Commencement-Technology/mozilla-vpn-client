/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */


plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
}
apply plugin: QtConfig

dependencies {
   // implementation project(path: ':openssl')
    implementation fileTree(dir: QtConfiguration.anyAndroid+"/jar", include: ['*.jar', '*.aar'])
}

android {
    compileSdkVersion Config.compileSdkVersion
    defaultConfig {
        minSdkVersion Config.minSdkVersion
    }
    sourceSets {
        main {
            java.srcDirs = [QtConfiguration.bindingsFolder]
            aidl.srcDirs = [QtConfiguration.bindingsFolder]
            manifest.srcFile 'AndroidManifest.xml'
            jniLibs.srcDirs = [
                    //"test",
                    'build/qt_plugins',
                    'build/qml_plugins',
            ]
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

// Tasks to Import the Platform plugins
task importQtPlatformPlugins(type: Copy) {
    with QtConfiguration.copyAndroidPlugin(QtConfiguration.x64,QtConfiguration.NDK_x64)
    with QtConfiguration.copyAndroidPlugin(QtConfiguration.arm64,QtConfiguration.NDK_arm64)
    with QtConfiguration.copyAndroidPlugin(QtConfiguration.x86,QtConfiguration.NDK_x86)
    with QtConfiguration.copyAndroidPlugin(QtConfiguration.armv7,QtConfiguration.NDK_armv7)

    with QtConfiguration.importQtPlugin("tls",QtConfiguration.x64,QtConfiguration.NDK_x64)
    with QtConfiguration.importQtPlugin("tls",QtConfiguration.arm64,QtConfiguration.NDK_arm64)
    with QtConfiguration.importQtPlugin("tls",QtConfiguration.x86,QtConfiguration.NDK_x86)
    with QtConfiguration.importQtPlugin("tls",QtConfiguration.armv7,QtConfiguration.NDK_armv7)

    with QtConfiguration.importQtPlugin("imageformats",QtConfiguration.x64,QtConfiguration.NDK_x64)
    with QtConfiguration.importQtPlugin("imageformats",QtConfiguration.arm64,QtConfiguration.NDK_arm64)
    with QtConfiguration.importQtPlugin("imageformats",QtConfiguration.x86,QtConfiguration.NDK_x86)
    with QtConfiguration.importQtPlugin("imageformats",QtConfiguration.armv7,QtConfiguration.NDK_armv7)

    into("build/qt_plugins")
}
preBuild.dependsOn importQtPlatformPlugins

// Tasks to Import the QML plugins
task importQMLPlugins(type: Copy) {
    onlyIf {
        // Qml import scanning is quite a bit of i/o, while the output rearly changes.
        // so once we have done this, don't do it again until the cache is cleared
        !(new File("build/qml_plugins")).exists()
    }

    with QtConfiguration.copyQMLPlugin(QtConfiguration.x64,QtConfiguration.NDK_x64)
    with QtConfiguration.copyQMLPlugin(QtConfiguration.arm64,QtConfiguration.NDK_arm64)
    with QtConfiguration.copyQMLPlugin(QtConfiguration.x86,QtConfiguration.NDK_x86)
    with QtConfiguration.copyQMLPlugin(QtConfiguration.armv7,QtConfiguration.NDK_armv7)

    with QtConfiguration.copyQMLCompat(QtConfiguration.x64,QtConfiguration.NDK_x64)
    with QtConfiguration.copyQMLCompat(QtConfiguration.arm64,QtConfiguration.NDK_arm64)
    with QtConfiguration.copyQMLCompat(QtConfiguration.x86,QtConfiguration.NDK_x86)
    with QtConfiguration.copyQMLCompat(QtConfiguration.armv7,QtConfiguration.NDK_armv7)
    into("build/qml_plugins")
}
preBuild.dependsOn importQMLPlugins
